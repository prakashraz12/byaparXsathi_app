/**
 * Generated by @openapi-codegen
 *
 * @version 1.0
 */
export type WithEmailDto = {
  /**
   * @example prakashraz@gmail.com
   */
  email: string;
};

export type LoginDto = {
  /**
   * @example prakashraz@gmail.com
   */
  email: string;
  /**
   * @example 123456
   */
  otp: string;
};

export type UserStage = "CREATED" | "SET_UP_COMPLETED";

export type LoginWithOtpResponse = {
  fullName: string;
  email: string;
  role: string;
  id: string;
  phoneNumber: string;
  address: string;
  stage: UserStage;
  country: Record<string, any>;
  isDeleted: boolean;
  requestDeleteOn: Record<string, any>;
  /**
   * @format date-time
   */
  createdAt: string;
  /**
   * @format date-time
   */
  updatedAt: string;
  accessToken: string;
  shops: ShopResponse[];
};

export type PaginationDto = {
  page: number;
  size: number;
  total: number;
  hasNextPage: boolean;
};

export type TLoginWithOtpResponse = {
  statusCode: number;
  message: string;
  isSuccess: boolean;
  data?: LoginWithOtpResponse | null;
  pagination?: PaginationDto;
};

export type CompleteSetupDto = {
  fullName: string;
  phoneNumber: string;
  address: string;
  shopName: string;
  shopType: string;
  id: string;
};

export type UserResponse = {
  fullName: string;
  email: string;
  role: string;
  id: string;
  phoneNumber: string;
  address: string;
  stage: UserStage;
  /**
   * @format date-time
   */
  createdAt: string;
  /**
   * @format date-time
   */
  updatedAt: string;
};

export type ShopResponse = {
  shopName: string;
  shopAddress: string;
  shopPhoneNumber: string;
  shopEmail: string;
  shopType: string;
  id: string;
  measuringUnits: Record<string, any>[];
  owner: UserResponse;
  /**
   * @format date-time
   */
  createdAt: string;
  /**
   * @format date-time
   */
  updatedAt: string;
};

export type CompletedSetupResponse = {
  user: UserResponse;
  shop: ShopResponse | null;
};

export type TCompletedSetupResponse = {
  statusCode: number;
  message: string;
  isSuccess: boolean;
  /**
   * Contains both user and shop information
   */
  data?: CompletedSetupResponse | null;
  pagination?: PaginationDto;
};

export type RevalidateTokenResponse = {
  accessToken: string;
};

export type TRevalidateTokenResponse = {
  statusCode: number;
  message: string;
  isSuccess: boolean;
  data?: RevalidateTokenResponse;
  pagination?: PaginationDto;
};

export type MeasuringUnitDto = {
  /**
   * Label for the measuring unit (e.g., Kilogram, Liter)
   */
  label: string;
  /**
   * Whether the measuring unit is active
   */
  active: boolean;
  /**
   * Short form of the measuring unit (e.g., kg, l)
   */
  shortForm: string;
};

export type CreateShopDto = {
  /**
   * Name of the shop
   */
  shopName: string;
  /**
   * Physical address of the shop
   */
  shopAddress: string;
  /**
   * Contact phone number of the shop
   */
  shopPhoneNumber: string;
  /**
   * Email address of the shop
   */
  shopEmail: string;
  /**
   * Type of the shop
   */
  shopType:
    | "CLOTHING_STORE"
    | "JEWELRY_STORE"
    | "BAKERY"
    | "CAFE"
    | "RESTAURANT"
    | "GROCERY";
  /**
   * PAN number of the shop
   */
  shopPanNumber?: string;
  /**
   * Registration number of the shop
   */
  shopRegNumber?: string;
  id?: string;
  /**
   * URL or path to the shop's payment QR code
   */
  shopPaymentQrCode?: string;
  /**
   * Status of the shop
   *
   * @default ACTIVE
   */
  status?: "ACTIVE" | "INACTIVE" | "SCHEDULED_FOR_DELETE";
  /**
   * List of measuring units used in the shop
   */
  measuringUnits?: MeasuringUnitDto[];
};
